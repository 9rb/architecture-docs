.. _comparison-of-blockchains:



################################################################################
Comparison of Blockchains
################################################################################


.. img:: ../img/comparison-table.png
    :align: center
    :width: 1304
    
    
This document assumes the reader is familiar with the basics of Bitcoin and Ethereum.
As one approach to introducing the architecture let’s compare the characteristics of
Bitcoin, Ethereum, and RChain as currently planned.

+--------------------------------+-------------------------------------------------------------------------+----------------------------------------------------------------------------------+-----------------------------------------------------------------------------+
|                                | Bitcoin                                                                 | Ethereum                                                                         | RChain                                                                      |
+================================+=========================================================================+==================================================================================+=============================================================================+
| **Semantic Data Structure**    | | Blockchain -- a chain of blocks. Each block contains a header that    | Blockchain -- a chain of blocks. Each block contains a header that points        | Blockchain -- a graph of blocks. Each block contains a header that points   |
|                                | | points at the previous block, a list of transactions, and other data. | at the previous block, a transaction list, and a ommers (uncles) list.           | at one or more previous blocks, a list of transactions, and other metadata. |
+---------------+----------------+-------------------------------------------------------------------------+----------------------------------------------------------------------------------+-----------------------------------------------------------------------------+
| **Consensus** | *Algorithm*    | Proof of work                                                           | Current: Proof of work. Future: Proof of Stake -- stake-based betting on blocks. | Proof of Stake: Stake-based betting on logical propositions.                |
+               +----------------+-------------------------------------------------------------------------+----------------------------------------------------------------------------------+-----------------------------------------------------------------------------+
|               | *Finality*     | | Probability of transaction reversal diminishes over time, at each     | Probability of transaction reversal diminishes over time, at each new            | Probability of transaction reversal diminishes over time, at each new       |
|               |                | | new block confirmation.                                               | block confirmation.                                                              | block confirmation.                                                         |
+               +----------------+-------------------------------------------------------------------------+----------------------------------------------------------------------------------+-----------------------------------------------------------------------------+
|               | *Visibility*   | Global                                                                  | Private, consortium, or public depending on deployed nodes.                      | Private, consortium, or public depending on namespace and/or deployed nodes.|
+               +----------------+-------------------------------------------------------------------------+----------------------------------------------------------------------------------+-----------------------------------------------------------------------------+
|               | *Revision*     | Soft and hard forks                                                     | Current: Soft and hard forks.                                                    | Block revisions in case of temporary network isolation.                     |
|               | *Mechanism*    |                                                                         | Future: Block revisions in case of temporary network isolation.                  |                                                                             |
+---------------+----------------+-------------------------------------------------------------------------+----------------------------------------------------------------------------------+-----------------------------------------------------------------------------+
| **Address**                    | | Identifier that represents a destination for a bitcoin transaction.   | An identifier that represents a possible destination for an Ethereum transaction,| An  encapsulated, encrypted, and  unique channel to communicate with a      |
|                                | | Derived from a random private key or from hash of a script (in P2SH)  | derived from a random private key to represent an account.                       | process (including a smart contract), similar to a URL.                     |
+---------------+----------------+-------------------------------------------------------------------------+----------------------------------------------------------------------------------+-----------------------------------------------------------------------------+
| **Sharding**  | *Heterogeneity*| Homogeneous, i.e., not sharded                                          | Current: Homogeneous, i.e., not sharded                                          | Isolated address “namespaces”  allow clients to subscribe to selected       |
|               |                |                                                                         | Future: two-level                                                                | address without downloading the entire blockchain. May impose different     |
|               |                |                                                                         |                                                                                  | security policies on different address spaces.                              |
+               +----------------+-------------------------------------------------------------------------+----------------------------------------------------------------------------------+-----------------------------------------------------------------------------+
|               | *Basis for*    | N/A                                                                     | Address range                                                                    | Dynamic composable sharding based on namespace interaction.                 |
|               | *sharding*     |                                                                         |                                                                                  |                                                                             |
+               +----------------+-------------------------------------------------------------------------+----------------------------------------------------------------------------------+-----------------------------------------------------------------------------+
|               | *Number of*    | N/A                                                                     | Future: two levels: cluster + leaves                                             | Levels of arbitrary depth and size.                                         | 
|               | *levels*       |                                                                         |                                                                                  |                                                                             |
+               +----------------+-------------------------------------------------------------------------+----------------------------------------------------------------------------------+-----------------------------------------------------------------------------+
|               | *Concurrency*  | N/A                                                                     | Current: No                                                                      | Yes. Language allows asynchronous and parallel execution of contracts.      |
|               |                |                                                                         | Future: Asynchronous. Not parallel.                                              | VM allows parallel execution of many VMs -- Concurrent validation of        |
|               |                |                                                                         |                                                                                  | transactions that do not compete for resources.                             |
+---------------+----------------+-------------------------------------------------------------------------+----------------------------------------------------------------------------------+-----------------------------------------------------------------------------+
| **Contracts** | *Computational*| Stack-based language with few instructions.                             | Turing complete                                                                  | Turing complete                                                             |
|               | *power*        |                                                                         |                                                                                  |                                                                             |
+               +----------------+-------------------------------------------------------------------------+----------------------------------------------------------------------------------+-----------------------------------------------------------------------------+
|               | *Runtime*      | | Script runs on Bitcoin Core, Libbitcoin, and other native             | Ethereum Virtual Machine implemented on multiple platforms.                      | RhoVM implemented on multiple platforms.                                    |
|               | *architecture* | | implementations.                                                      |                                                                                  |                                                                             |
+               +----------------+-------------------------------------------------------------------------+----------------------------------------------------------------------------------+-----------------------------------------------------------------------------+
|               | *Programming*  | Script                                                                  | Solidity, Serpent, LLL and any other languages that get implemented on the EVM.  | Rholang and any other languages that get implemented on the RhoVM.          |
|               | *language*     |                                                                         |                                                                                  |                                                                             |
+               +----------------+-------------------------------------------------------------------------+----------------------------------------------------------------------------------+-----------------------------------------------------------------------------+
|               | *Name*         | | A smart contract (concept) is not named, but,implemented at an address| Has one address.                                                                 | Instance may have multiple names; may exist in multiple namespaces.         |
|               |                | | with a transaction’s locking and unlocking scripts.                   |                                                                                  |                                                                             |
+---------------+----------------+-------------------------------------------------------------------------+----------------------------------------------------------------------------------+-----------------------------------------------------------------------------+
| **Latency**   | *Block*        | 10 minutes for 1 block, 30 minutes for de-facto finality.               | Current: 14 seconds for 1 block, 3 min for de-facto finality.                    | Variable. Target is sub-second for 1 block. TBD for de-facto finality.      | 
|               | *confirmation* |                                                                         |                                                                                  |                                                                             |
|               | *time*         |                                                                         |                                                                                  |                                                                             |
+               +----------------+-------------------------------------------------------------------------+----------------------------------------------------------------------------------+-----------------------------------------------------------------------------+
|               | *Block*        | Affected by large blocks and need for global consensus.                 | Affected by large blocks and need for global consensus.                          | Improved by sharding, bet-by-proposition (versus block), nodes listen       |
|               | *confirmation* |                                                                         |                                                                                  | to only portion of blockchain.                                              |
|               | *time*         |                                                                         |                                                                                  |                                                                             |
+---------------+----------------+-------------------------------------------------------------------------+----------------------------------------------------------------------------------+-----------------------------------------------------------------------------+
| **Block Size**                 | 1MB                                                                     | Dynamic                                                                          | Dynamic                                                                     |
+--------------------------------+-------------------------------------------------------------------------+----------------------------------------------------------------------------------+-----------------------------------------------------------------------------+
| **Max Transaction/**           | 100KB                                                                   | Dynamic based on gas limit                                                       | Dependent token type and its per-namespace policies.                        |
| **Contract Size**              |                                                                         |                                                                                  |                                                                             |
+--------------------------------+-------------------------------------------------------------------------+----------------------------------------------------------------------------------+-----------------------------------------------------------------------------+
| **Scalability/**               | 7 tx/s                                                                  | 15 tx/s                                                                          | Target is 40,000 - 100,000 tx/sec                                           |
| **Transaction Throughput**     |                                                                         |                                                                                  |                                                                             |
+--------------------------------+-------------------------------------------------------------------------+----------------------------------------------------------------------------------+-----------------------------------------------------------------------------+
| **Protocol Token**             | Bitcoin, plus tokens such as provided by Omni Layer.                    | Ether (ETH), plus tokens issued by contracts.                                    | Multiple tokens issued by system contracts or application contracts.        |
+--------------------------------+-------------------------------------------------------------------------+----------------------------------------------------------------------------------+-----------------------------------------------------------------------------+
| **Concurrent VM**              | N/A. Bitcoin’s stack-based language does not have or require its own VM.| No. The EVM is single-threaded.                                                  | Yes. RhoVM is multithreaded. This makes concurrent shards easier to         |
|                                |                                                                         |                                                                                  | implement since there are no assumptions on synchrony.                      |
+--------------------------------+-------------------------------------------------------------------------+----------------------------------------------------------------------------------+-----------------------------------------------------------------------------+
| **Privacy**                    | Low at base protocol layer. Pseudononymous.                             | Low at base protocol layer. Pseudononymous.                                      | Namespaces can be arbitrarily obscure.                                      |
|                                |                                                                         |                                                                                  | Agent Service channels can be encrypted.                                    |
+--------------------------------+-------------------------------------------------------------------------+----------------------------------------------------------------------------------+-----------------------------------------------------------------------------+
